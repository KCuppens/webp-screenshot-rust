[package]
name = "webp-screenshot-rust"
version = "1.0.0"
edition = "2021"
authors = ["Kobe Cuppens <kobe@claritytracker.com>"]
description = "High-performance cross-platform screenshot capture library with WebP encoding, hardware acceleration, and multi-monitor support for Windows, macOS, and Linux"
license = "MIT"
repository = "https://github.com/KCuppens/webp-screenshot-rust"
keywords = ["screenshot", "webp", "capture", "cross-platform", "simd"]
categories = ["multimedia::images", "multimedia::encoding"]
readme = "README.md"
documentation = "https://docs.rs/webp-screenshot-rust"

[dependencies]
# Core dependencies
thiserror = "2.0.9"
anyhow = "1.0.95"
once_cell = "1.21.0"
parking_lot = "0.12.3"
rayon = "1.10.0"
num_cpus = "1.16.0"
bytes = "1.9.0"
crossbeam-channel = "0.5.15"
log = "0.4.22"

# Image processing and WebP encoding
image = { version = "0.25.5", default-features = false, features = ["webp"] }
webp = "0.3.0"
# Use the webp crate instead of direct libwebp-sys for better compatibility

# Platform-specific dependencies
[target.'cfg(windows)'.dependencies]
windows = { version = "0.58.0", features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_Graphics_Dwm",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Threading",
    "Win32_System_Memory",
    "Graphics_Capture",
    "Graphics_DirectX",
    "Graphics_DirectX_Direct3D11",
    "Foundation_Collections"
]}
winapi = { version = "0.3.9", features = ["wingdi", "winuser", "dwmapi", "memoryapi"] }

[target.'cfg(target_os = "macos")'.dependencies]
core-graphics = "0.24.0"
core-foundation = "0.10.0"
cocoa = "0.26.0"
objc = "0.2.7"
objc-foundation = "0.1.1"
dispatch = "0.2.0"
metal = { version = "0.29.0", optional = true }

[target.'cfg(target_os = "linux")'.dependencies]
x11rb = { version = "0.13", features = ["randr", "xfixes", "shm", "image"] }
wayland-client = { version = "0.31.8", optional = true }
wayland-protocols = { version = "0.32.6", optional = true, features = ["client"] }
wayland-protocols-wlr = { version = "0.3.6", optional = true, features = ["client"] }
dbus = { version = "0.9.7", optional = true }

# Optional SIMD dependencies
[dependencies.wide]
version = "0.7.31"
optional = true

# FFI dependencies
[dependencies.libc]
version = "0.2.169"
optional = true

[dev-dependencies]
criterion = { version = "0.6.0", features = ["html_reports"] }
tempfile = "3.15.0"
serial_test = "3.2.0"
proptest = "1.6.0"
approx = "0.5.1"
env_logger = "0.11.6"

[build-dependencies]
cc = "1.2.7"
pkg-config = "0.3.31"
bindgen = { version = "0.72.1", optional = true }

[features]
default = ["parallel", "c-api"]
simd = ["wide"]
parallel = []
wayland = ["wayland-client", "wayland-protocols", "wayland-protocols-wlr", "dbus"]
c-api = ["libc"]
gpu = ["metal"]
benchmark = []
bindgen = ["dep:bindgen"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
panic = "abort"

[profile.bench]
inherits = "release"

[profile.dev]
opt-level = 0
debug = true

[[bench]]
name = "capture"
harness = false

[[bench]]
name = "encoding"
harness = false

[[example]]
name = "simple_capture"

[[example]]
name = "multi_display"

[[example]]
name = "streaming"